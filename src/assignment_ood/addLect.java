/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment_ood;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.awt.BorderLayout;
/**
 *
 * @author User
 */
public class addLect extends javax.swing.JFrame {
 
    private JButton editLectButton;

    /**
     * Creates new form addLect
     */
    public addLect() {
    initComponents(); // Call the auto-generated initComponents method
    loadLecturersFromFile();
   
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLectName = new javax.swing.JTextField();
        txtLectId = new javax.swing.JTextField();
        projectManagerYes = new javax.swing.JRadioButton();
        projectmanagerNo = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        submitlect = new javax.swing.JButton();
        editLect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lecturerTable = new javax.swing.JTable();
        delLect = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(204, 0, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Ammend Lecturer");

        txtLectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLectNameActionPerformed(evt);
            }
        });

        projectManagerYes.setForeground(new java.awt.Color(0, 0, 0));
        projectManagerYes.setText("Yes");

        projectmanagerNo.setForeground(new java.awt.Color(0, 0, 0));
        projectmanagerNo.setText("No");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Lecturer Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Lecturer ID");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Project Manager");

        submitlect.setText("Submit");
        submitlect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitlectActionPerformed(evt);
            }
        });

        editLect.setText("Edit Lecturer");
        editLect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLectActionPerformed(evt);
            }
        });

        lecturerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Lecturer Name", "Lecturer ID", "Is project Manager", "Supervising Student"
            }
        ));
        jScrollPane1.setViewportView(lecturerTable);

        delLect.setText("Delete Lecturer");
        delLect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delLectActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment_ood/images/logo.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(editLect, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(delLect)
                                .addGap(18, 18, 18)
                                .addComponent(submitlect)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 492, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(projectManagerYes, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(projectmanagerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLectId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLectName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel6)))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLectId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(projectManagerYes)
                            .addComponent(projectmanagerNo)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitlect)
                            .addComponent(editLect)
                            .addComponent(delLect))
                        .addGap(33, 33, 33))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLectNameActionPerformed
        
    }//GEN-LAST:event_txtLectNameActionPerformed

    private void submitlectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitlectActionPerformed

     String lecturerName = txtLectName.getText(); // Get the lecturer name from the text field
    String lecturerId = txtLectId.getText(); // Get the lecturer ID from the text field
    boolean isProjectManager = projectManagerYes.isSelected(); // Check if the radio button for Project Manager is selected
     Lecturer lecturer = new Lecturer(lecturerName, lecturerId, isProjectManager);
    // Save lecturer details to a text file
    saveLecturerToFile(lecturerName, lecturerId, isProjectManager);
    loadLecturersFromFile();
    // Display a success message or perform any additional actions
    JOptionPane.showMessageDialog(this, "Lecturer details submitted successfully.");
}
    
private void saveLecturerToFile(String lecturerName, String lecturerId, boolean isProjectManager) {
    try (FileWriter writer = new FileWriter("lecturers.txt", true)) { // Use true as the second parameter to append to the file
        writer.write(lecturerName + "," + lecturerId + "," + isProjectManager + "\n");
    } catch (IOException e) {
        e.printStackTrace(); // Handle or log the exception as needed
    }
    }//GEN-LAST:event_submitlectActionPerformed
private void loadLecturersFromFile() {
    DefaultTableModel model = (DefaultTableModel) lecturerTable.getModel();
    model.setRowCount(0); // Clear the table

    try (BufferedReader reader = new BufferedReader(new FileReader("lecturers.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split(",");
            if (parts.length == 3) {
                String lecturerName = parts[0];
                String lecturerId = parts[1];
                boolean isProjectManager = Boolean.parseBoolean(parts[2]);
                model.addRow(new Object[]{lecturerName, lecturerId, isProjectManager});
            }
        }
    } catch (IOException e) {
        e.printStackTrace(); // Handle or log the exception as needed
    }
}
private void updateLecturerInFile(String lecturerName, String lecturerId, boolean isProjectManager) {
    // Read all lines from the file into a list
    java.util.List<String> lines = new java.util.ArrayList<>();
    try (BufferedReader reader = new BufferedReader(new FileReader("lecturers.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            lines.add(line);
        }
    } catch (IOException e) {
        
        e.printStackTrace();
    }

    // Update the selected lecturer's details
    String updatedLine = lecturerName + "," + lecturerId + "," + isProjectManager;
    int selectedIndex = lecturerTable.getSelectedRow();
    if (selectedIndex != -1 && selectedIndex < lines.size()) {
        lines.set(selectedIndex, updatedLine);
    }

    // Write the updated lines back to the file
    try (FileWriter writer = new FileWriter("lecturers.txt")) {
        for (String line : lines) {
            writer.write(line + "\n");
        }
    } catch (IOException e) {
        e.printStackTrace();
    }

    // Refresh the table to reflect the changes
    loadLecturersFromFile(); // Assuming you have a method to reload the data into the JTable
}
    private void editLectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editLectActionPerformed
          int selectedRow = lecturerTable.getSelectedRow();
    if (selectedRow != -1) {
        String lecturerName = (String) lecturerTable.getValueAt(selectedRow, 0);
        String lecturerId = (String) lecturerTable.getValueAt(selectedRow, 1);
        boolean isProjectManager = (boolean) lecturerTable.getValueAt(selectedRow, 2);

        // Display a dialog to edit the lecturer details
        JTextField txtLecturerName = new JTextField(lecturerName);
        JTextField txtLecturerId = new JTextField(lecturerId);
        JCheckBox chkIsProjectManager = new JCheckBox("Is Project Manager", isProjectManager);

        Object[] message = {
            "Lecturer Name:", txtLecturerName,
            "Lecturer ID:", txtLecturerId,
            chkIsProjectManager
        };

        int option = JOptionPane.showConfirmDialog(this, message, "Edit Lecturer", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            String newLecturerName = txtLecturerName.getText();
            String newLecturerId = txtLecturerId.getText();
            boolean newIsProjectManager = chkIsProjectManager.isSelected();

            // Update the JTable with the modified details
            lecturerTable.setValueAt(newLecturerName, selectedRow, 0);
            lecturerTable.setValueAt(newLecturerId, selectedRow, 1);
            lecturerTable.setValueAt(newIsProjectManager, selectedRow, 2);

            // Update the file with the modified details
            updateLecturerInFile(newLecturerName, newLecturerId, newIsProjectManager);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a lecturer to edit.");
    }
    }//GEN-LAST:event_editLectActionPerformed

    private void delLectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delLectActionPerformed
         int selectedRow = lecturerTable.getSelectedRow();
    if (selectedRow != -1) {
        // Get the lecturer details from the selected row
        String lecturerName = (String) lecturerTable.getValueAt(selectedRow, 0);
        String lecturerId = (String) lecturerTable.getValueAt(selectedRow, 1);
        
        // Get the project manager value as an Object
        Object projectManagerValue = lecturerTable.getValueAt(selectedRow, 2);
        
        boolean isProjectManager = false; // Default value
        
        if (projectManagerValue != null) {
            if (projectManagerValue instanceof Boolean) {
                isProjectManager = (Boolean) projectManagerValue;
            } else if (projectManagerValue instanceof String) {
                isProjectManager = Boolean.parseBoolean((String) projectManagerValue);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Project Manager value.");
                return; // Exit the method if the value is neither Boolean nor String
            }
        }

        // Delete the selected lecturer from the text file
        deleteLecturerFromFile(lecturerName, lecturerId, isProjectManager);

        // Remove the selected row from the table
        DefaultTableModel model = (DefaultTableModel) lecturerTable.getModel();
        model.removeRow(selectedRow);
    } else {
        JOptionPane.showMessageDialog(this, "Please select a lecturer to delete.");
    }
    }//GEN-LAST:event_delLectActionPerformed
private void deleteLecturerFromFile(String lecturerName, String lecturerId, boolean isProjectManager) {
    // Read all lines from the file into a list
    java.util.List<String> lines = new java.util.ArrayList<>();
    try (BufferedReader reader = new BufferedReader(new FileReader("lecturers.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split(",");
            if (parts.length == 3) {
                if (!lecturerName.equals(parts[0]) || !lecturerId.equals(parts[1]) || isProjectManager != Boolean.parseBoolean(parts[2])) {
                    lines.add(line);
                }
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }

    // Write the updated lines back to the file
    try (FileWriter writer = new FileWriter("lecturers.txt")) {
        for (String line : lines) {
            writer.write(line + "\n");
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addLect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addLect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addLect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addLect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addLect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delLect;
    private javax.swing.JButton editLect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable lecturerTable;
    private javax.swing.JRadioButton projectManagerYes;
    private javax.swing.JRadioButton projectmanagerNo;
    private javax.swing.JButton submitlect;
    private javax.swing.JTextField txtLectId;
    private javax.swing.JTextField txtLectName;
    // End of variables declaration//GEN-END:variables
}
