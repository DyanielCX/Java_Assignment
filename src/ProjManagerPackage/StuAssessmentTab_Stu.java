/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ProjManagerPackage;

import ProjManagerPackage.StuAsseTabElement.ModernScrollBarUI;
import ProjManagerPackage.StuAsseTabElement.TableActionCellEditor;
import ProjManagerPackage.StuAsseTabElement.TableActionCellRender;
import ProjManagerPackage.StuAsseTabElement.TableActionEvent;
import ProjManagerPackage.StuAsseTabElement.TableHeader;
import StuPackage.StuData_IO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class StuAssessmentTab_Stu extends javax.swing.JPanel {

    private ProjMng_MainFrame mainFrame;
    
    public StuAssessmentTab_Stu(ProjMng_MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();
        
        /* Set the scrollbar to customize scrollbar*/
        fixTable(jScrollPane1);
        
        /* Set the header to customize header */
        StuAssTable.getTableHeader().setReorderingAllowed(false);
        StuAssTable.getTableHeader().setResizingAllowed(false);
        StuAssTable.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object o, boolean isSelected, boolean hasFocus, int row, int column) {
                TableHeader header = new TableHeader(o + "");
                return header;
            }
        });

        
        /*Show the student haven't been alloted assesment*/
        for (int i=0; i < StuData_IO.StuData.size(); i++){
            String StuName = StuData_IO.StuData.get(i).name;
            String StuID = StuData_IO.StuData.get(i).id;
            String Assessment = StuData_IO.StuData.get(i).assessment;
            
            if (Assessment.equals("-")) {
            Object[] InsertRow = { StuName, StuID, Assessment};

            DefaultTableModel model = (DefaultTableModel) StuAssTable.getModel();
            model.addRow(InsertRow);
            }
        }
        
        /*Show the student have been alloted assesment*/
        for (int i=0; i < StuData_IO.StuData.size(); i++){
            String StuName = StuData_IO.StuData.get(i).name;
            String StuID = StuData_IO.StuData.get(i).id;
            String Assessment = StuData_IO.StuData.get(i).assessment;
            
            if (!Assessment.equals("-")) {
            Object[] InsertRow = { StuName, StuID, Assessment};

            DefaultTableModel model = (DefaultTableModel) StuAssTable.getModel();
            model.addRow(InsertRow);
            }
        }
        
        /*Set the edit button and its function*/
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onEdit(int row) {
                //Get the student id of selected student
                String StuID = (String) StuAssTable.getValueAt(row, 1);
                mainFrame.dispose();
                
                EditAssessmentFrame editPage = new EditAssessmentFrame(StuID);
                editPage.setVisible(true);
            }
        };
        
        //Insert edit button into table
        StuAssTable.getColumnModel().getColumn(3).setCellRenderer(new TableActionCellRender());
        StuAssTable.getColumnModel().getColumn(3).setCellEditor(new TableActionCellEditor(event));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        StuAssTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        StuAssTable.setFont(new java.awt.Font("Dubai Medium", 0, 20)); // NOI18N
        StuAssTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Student ID", "Assessment", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        StuAssTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        StuAssTable.setRowHeight(40);
        jScrollPane1.setViewportView(StuAssTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 65, 886, 465));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        jLabel1.setText("Student Data");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 17, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    /* Customize the scrollbar for table */
    public void fixTable (JScrollPane scroll){
        scroll.getViewport().setBackground(Color.WHITE);
        
        JScrollBar verticalScrollBar = scroll.getVerticalScrollBar();
        verticalScrollBar.setUI(new ModernScrollBarUI());

        // Set other properties of the vertical scroll bar
        verticalScrollBar.setPreferredSize(new Dimension(3, 5));
        verticalScrollBar.setForeground(new Color(71, 105, 231, 178));
        verticalScrollBar.setUnitIncrement(20);
        verticalScrollBar.setOpaque(false);
        
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        scroll.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        scroll.setBorder(new EmptyBorder(5, 10, 5, 10));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable StuAssTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
